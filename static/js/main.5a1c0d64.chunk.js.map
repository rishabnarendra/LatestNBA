{"version":3,"sources":["components/Games/Games.module.css","api/index.js","components/DatePicker/PickDate.jsx","components/Games/Games.jsx","components/Standings/Standings.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","url","headers","fetchEasternConferenceStandings","a","easternStandingsUrl","axios","get","standings","data","api","fetchWesternConferenceStandings","westernStandingsUrl","fetchEasternConferenceTeams","easternConferenceUrl","teams","fetchWesternConferenceTeams","fetchGamesByDate","yyyy","mm","dd","date","gamesOnDateUrl","console","log","games","Component","Games","gamesByDate","length","style","textAlign","className","styles","noGames","Grid","container","justify","map","game","item","xs","sm","md","component","Card","card","CardContent","arena","city","score","logo","src","vTeam","shortName","start","end","points","duration","separator","hTeam","tableHeaderStyle","fontWeight","backgroundColor","color","fontSize","rowStyle","Standings","conferenceStandings","getTeamLogoById","id","i","teamId","TableContainer","Paper","Table","align","width","size","aria-label","TableHead","TableRow","TableCell","TableBody","hover","height","fullName","getTeamNameById","win","loss","toFixed","gamesBehind","conference","home","away","lastTenWin","lastTenLoss","App","state","selectedConference","easternConferenceStandings","easternConferenceTeams","westernConferenceStandings","westernConferenceTeams","this","setState","class","onClick","changeConference","cursor","marginLeft","float","marginRight","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,MAAQ,qBAAqB,KAAO,oBAAoB,MAAQ,qBAAqB,KAAO,oBAAoB,QAAU,yB,mPCCtMC,EAAM,oCAERC,EAAU,CACV,gBAFW,qDAGX,iBAAkB,4BAuBTC,EAA+B,uCAAG,gCAAAC,EAAA,sEAEjCC,EAFiC,UAERJ,EAFQ,qDAGQK,IAAMC,IAAIF,EAAqB,CAAEH,QAASA,IAHlD,uBAGhBM,EAHgB,EAG/BC,KAAQC,IAAOF,UAHgB,kBAIhCA,GAJgC,wHAAH,qDAU/BG,EAA+B,uCAAG,gCAAAP,EAAA,sEAEjCQ,EAFiC,UAERX,EAFQ,qDAGQK,IAAMC,IAAIK,EAAqB,CAAEV,QAASA,IAHlD,uBAGhBM,EAHgB,EAG/BC,KAAQC,IAAOF,UAHgB,kBAIhCA,GAJgC,wHAAH,qDAU/BK,EAA2B,uCAAG,gCAAAT,EAAA,sEAE7BU,EAF6B,UAEHb,EAFG,iCAGQK,IAAMC,IAAIO,EAAsB,CAAEZ,QAASA,IAHnD,uBAGZa,EAHY,EAG3BN,KAAQC,IAAOK,MAHY,kBAI5BA,GAJ4B,wHAAH,qDAU3BC,EAA2B,uCAAG,gCAAAZ,EAAA,sEAE7BU,EAF6B,UAEHb,EAFG,iCAGQK,IAAMC,IAAIO,EAAsB,CAAEZ,QAASA,IAHnD,uBAGZa,EAHY,EAG3BN,KAAQC,IAAOK,MAHY,kBAI5BA,GAJ4B,wHAAH,qDAU3BE,EAAgB,uCAAG,WAAOC,EAAMC,EAAIC,GAAjB,qBAAAhB,EAAA,sEAElBiB,EAAOH,EAAO,IAAMC,EAAK,IAAMC,EAC/BE,EAHkB,UAGErB,EAHF,uBAGoBoB,GAHpB,KAIxBE,QAJwB,SAINjB,IAAMC,IAAIe,EAAgB,CAAEpB,QAASA,IAJ/B,+BAIhBsB,IAJgB,0BAKmBlB,IAAMC,IAAIe,EAAgB,CAAEpB,QAASA,IALxD,wBAKDuB,EALC,EAKhBhB,KAAQC,IAAOe,MALC,kBAMjBA,GANiB,2HAAH,0D,oBClENC,Y,4DC4BRC,EA1BD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAGb,OAAIA,EAKA,6BAC6B,IAAvBA,EAAYC,OAAe,yBAAKC,MAAS,CAAEC,UAAW,WAAY,4BAAQC,UAAcC,IAAOC,SAA7B,mBAAuE,KAC3I,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAU,UACrBT,EAAYU,KAAI,SAAAC,GAAI,OACjB,kBAACJ,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,UAAcC,IAAOb,UAAcC,IAAOa,MACvE,kBAACC,EAAA,EAAD,KACI,uBAAGf,UAAcC,IAAOe,OAAUT,EAAKS,OACvC,uBAAGhB,UAAcC,IAAOgB,MAASV,EAAKU,MACtC,uBAAGjB,UAAcC,IAAOiB,OAAQ,yBAAKlB,UAAaC,IAAOkB,KAAMC,IAAOb,EAAKc,MAAMF,OAAjF,SAAkGZ,EAAKc,MAAMC,UAA7G,MAA2H,kBAAC,IAAD,CAASC,MAAU,EAAIC,IAAQjB,EAAKc,MAAMH,MAAMO,OAASC,SAAa,EAAOC,UAAY,OACpN,uBAAG3B,UAAcC,IAAOiB,OAAQ,yBAAKlB,UAAaC,IAAOkB,KAAMC,IAAOb,EAAKqB,MAAMT,OAAjF,SAAkGZ,EAAKqB,MAAMN,UAA7G,MAA2H,kBAAC,IAAD,CAASC,MAAU,EAAIC,IAAQjB,EAAKqB,MAAMV,MAAMO,OAASC,SAAa,EAAOC,UAAY,cAbjO,W,8DCAXE,EAAmB,CACnBC,WAAY,IACZC,gBAAiB,UACjBC,MAAO,UACPC,SAAU,QAGVC,EAAW,CACXF,MAAO,QAoEIG,EAjEG,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,oBAAqBrD,EAAY,EAAZA,MAGtC,IAAIqD,IAAwBrD,EACxB,MAAO,UAgBX,SAASsD,EAAgBC,GACvB,IAAI,IAAIC,EAAI,EAAGA,EAAIxD,EAAMc,OAAQ0C,IAC/B,GAAGD,IAAOvD,EAAMwD,GAAGC,OACjB,OAAOzD,EAAMwD,GAAGpB,KAGpB,MAAO,GAGT,OACA,kBAACsB,EAAA,EAAD,CAAgB7B,UAAW8B,KACzB,kBAACC,EAAA,EAAD,CAAOC,MAAQ,SAAS9C,MAAO,CAAE,aAAc,SAAU+C,MAAO,SAAWC,KAAO,QAAQC,aAAW,iBACnG,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWpD,MAAU+B,EAAmBe,MAAM,QAA9C,QACA,kBAACM,EAAA,EAAD,CAAWpD,MAAU+B,EAAmBe,MAAM,QAA9C,KACA,kBAACM,EAAA,EAAD,CAAWpD,MAAU+B,EAAmBe,MAAM,QAA9C,KACA,kBAACM,EAAA,EAAD,CAAWpD,MAAU+B,EAAmBe,MAAM,QAA9C,OACA,kBAACM,EAAA,EAAD,CAAWpD,MAAU+B,EAAmBe,MAAM,QAA9C,MACA,kBAACM,EAAA,EAAD,CAAWpD,MAAU+B,EAAmBe,MAAM,QAA9C,QACA,kBAACM,EAAA,EAAD,CAAWpD,MAAU+B,EAAmBe,MAAM,QAA9C,QACA,kBAACM,EAAA,EAAD,CAAWpD,MAAU+B,EAAmBe,MAAM,QAA9C,QACA,kBAACM,EAAA,EAAD,CAAWpD,MAAU+B,EAAmBe,MAAM,QAA9C,SAGJ,kBAACO,EAAA,EAAD,KACGf,EAAoB9B,KAAI,SAAA9B,GAAS,OAChC,kBAACyE,EAAA,EAAD,CAAUG,OAAK,GACX,kBAACF,EAAA,EAAD,CAAWN,MAAM,OAAO9C,MAAUoC,GAAW,yBAAKpC,MAAS,CAAEuD,OAAQ,OAAQR,MAAO,QAASzB,IAAQiB,EAAgB7D,EAAUgE,UAA/H,SArCZ,SAAyBF,GACrB,IAAI,IAAIC,EAAI,EAAGA,EAAIxD,EAAMc,OAAQ0C,IAC/B,GAAGD,IAAOvD,EAAMwD,GAAGC,OACjB,OAAOzD,EAAMwD,GAAGe,SAGpB,MAAO,GA+BsJC,CAAgB/E,EAAUgE,SAC/K,kBAACU,EAAA,EAAD,CAAWN,MAAM,OAAO9C,MAAUoC,GAAa1D,EAAUgF,KACzD,kBAACN,EAAA,EAAD,CAAWN,MAAM,OAAO9C,MAAUoC,GAAa1D,EAAUiF,MACzD,kBAACP,EAAA,EAAD,CAAWN,MAAM,OAAO9C,MAAUoC,IA5CjBsB,EA4CkDhF,EAAUgF,IA5CvDC,EA4C4DjF,EAAUiF,MA3CtF,IAAND,GAAaA,EAAMC,IAAOC,QAAQ,KA4ClC,kBAACR,EAAA,EAAD,CAAWN,MAAM,OAAO9C,MAAUoC,GAAa1D,EAAUmF,aACzD,kBAACT,EAAA,EAAD,CAAWN,MAAM,OAAO9C,MAAUoC,GAAa1D,EAAUoF,WAAWJ,IAApE,MAA8EhF,EAAUoF,WAAWH,MACnG,kBAACP,EAAA,EAAD,CAAWN,MAAM,OAAO9C,MAAUoC,GAAa1D,EAAUqF,KAAKL,IAA9D,MAAwEhF,EAAUqF,KAAKJ,MACvF,kBAACP,EAAA,EAAD,CAAWN,MAAM,OAAO9C,MAAUoC,GAAa1D,EAAUsF,KAAKN,IAA9D,MAAwEhF,EAAUsF,KAAKL,MACvF,kBAACP,EAAA,EAAD,CAAWN,MAAM,OAAO9C,MAAUoC,GAAa1D,EAAUuF,WAAzD,MAA0EvF,EAAUwF,cAjDhG,IAA6BR,EAAKC,SCwDvBQ,E,4MA5EbC,MAAQ,CACNC,mBAAoB,OACpBjF,KAAM,GACNC,GAAI,GACJC,GAAI,GACJC,KAAM,GACN+E,2BAA4B,GAC5BC,uBAAwB,GACxBC,2BAA4B,GAC5BC,uBAAwB,GACxB3E,YAAa,I,wLAmBb4E,K,SAAkDrG,I,gCAAlCiG,2B,WAAXK,S,qBACLD,K,SAA8C3F,I,gCAA9BwF,uB,WAAXI,S,qBACLD,K,UAAkD7F,I,iCAAlC2F,2B,WAAXG,S,qBACLD,K,UAA8CxF,I,mCAA9BuF,uB,YAAXE,S,uBACLD,K,UAAmCvF,EAAiB,OAAQ,KAAM,M,4BAAlDW,Y,aAAX6E,S,gKAMUN,GACfK,KAAKC,SAAS,CAAEN,yB,+BAGR,IAAD,OAECA,GADSK,KAAKN,MAAd7E,KACuBmF,KAAKN,MAA5BC,oBACAvE,EAAgB4E,KAAKN,MAArBtE,YACAwE,EAA+BI,KAAKN,MAApCE,2BACAC,EAA2BG,KAAKN,MAAhCG,uBACAC,EAA+BE,KAAKN,MAApCI,2BACAC,EAA2BC,KAAKN,MAAhCK,uBAER,OACE,6BAEE,yBAAKG,MAAQ,cACX,kBAAC,EAAD,CAAO9E,YAAgBA,KAEzB,yBAAKE,MAAS,CAAEC,UAAW,WACA,SAAvBoE,EACA,uBAAGQ,QAAY,kBAAM,EAAKC,iBAAiB,SAAU9E,MAAS,CAAE+E,OAAQ,UAAW/C,WAAY,OAAQE,MAAO,OAAQ8C,WAAY,KAAMC,MAAO,SAA/I,sBACA,uBAAGJ,QAAY,kBAAM,EAAKC,iBAAiB,SAAU9E,MAAS,CAAE+E,OAAQ,UAAW7C,MAAO,OAAQ8C,WAAY,KAAMC,MAAO,SAA3H,sBAEuB,SAAvBZ,EACA,uBAAGQ,QAAY,kBAAM,EAAKC,iBAAiB,SAAU9E,MAAS,CAAE+E,OAAQ,UAAW/C,WAAY,OAAQE,MAAO,OAAQgD,YAAa,KAAMD,MAAO,UAAhJ,sBACA,uBAAGJ,QAAY,kBAAM,EAAKC,iBAAiB,SAAU9E,MAAS,CAAE+E,OAAQ,UAAW7C,MAAO,OAAQgD,YAAa,KAAMD,MAAO,UAA5H,uBAGqB,SAAvBZ,EACA,kBAAC,EAAD,CAAW/B,oBAAwBgC,EAA6BrF,MAAUsF,IAC1E,kBAAC,EAAD,CAAWjC,oBAAwBkC,EAA6BvF,MAAUwF,S,GAxElE7E,aCOEuF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3G,QAAQ2G,MAAMA,EAAMC,c","file":"static/js/main.5a1c0d64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Games_container__lZoQq\",\"card\":\"Games_card__2uIVa\",\"arena\":\"Games_arena__30-bA\",\"city\":\"Games_city__IJ3QK\",\"score\":\"Games_score__2P8UQ\",\"logo\":\"Games_logo__3w8xr\",\"noGames\":\"Games_noGames__2KsTP\"};","import axios from 'axios'; \r\n\r\nconst url = 'https://api-nba-v1.p.rapidapi.com';\r\nconst apiKey = \"403f30c5camshb8ecd0f4795ca77p1d7860jsn152f529df386\";\r\nvar headers = {\r\n    \"X-Mashape-Key\": apiKey, \r\n    \"X-Mashape-Host\": \"api-nba-v1.p.mashape.com\"\r\n};\r\n\r\nexport const fetchSeasons = async () => {\r\n    try {\r\n        const seasonsUrl = `${url}/seasons/`; \r\n        const { data: { api: { seasons } } } = await axios.get(seasonsUrl, { headers: headers }); \r\n        return seasons;\r\n    } catch(error) {\r\n        return error; \r\n    }\r\n}\r\n\r\nexport const fetchTeams = async () => {\r\n    try {\r\n        const teamssUrl = `${url}/teams/teamId/1`; \r\n        const { data } = await axios.get(teamssUrl, { headers: headers }); \r\n        return data;\r\n    } catch(error) {\r\n        return error; \r\n    }\r\n}\r\n\r\nexport const fetchEasternConferenceStandings = async () => {\r\n    try {\r\n        const easternStandingsUrl = `${url}/standings/standard/2019/conference/east`; \r\n        const { data: { api: { standings } } } = await axios.get(easternStandingsUrl, { headers: headers }); \r\n        return standings;\r\n    } catch(error) {\r\n        return error; \r\n    }\r\n}\r\n    \r\nexport const fetchWesternConferenceStandings = async () => {\r\n    try {\r\n        const westernStandingsUrl = `${url}/standings/standard/2019/conference/west`; \r\n        const { data: { api: { standings } } } = await axios.get(westernStandingsUrl, { headers: headers }); \r\n        return standings;\r\n    } catch(error) {\r\n        return error; \r\n    }\r\n}\r\n\r\nexport const fetchEasternConferenceTeams = async () => {\r\n    try {\r\n        const easternConferenceUrl = `${url}/teams/confName/East`; \r\n        const { data: { api: { teams } } } = await axios.get(easternConferenceUrl, { headers: headers }); \r\n        return teams;\r\n    } catch(error) {\r\n        return error; \r\n    }\r\n}\r\n\r\nexport const fetchWesternConferenceTeams = async () => {\r\n    try {\r\n        const easternConferenceUrl = `${url}/teams/confName/West`; \r\n        const { data: { api: { teams } } } = await axios.get(easternConferenceUrl, { headers: headers }); \r\n        return teams;\r\n    } catch(error) {\r\n        return error; \r\n    }\r\n}\r\n\r\nexport const fetchGamesByDate = async (yyyy, mm, dd) => {\r\n    try {\r\n        const date = yyyy + '-' + mm + '-' + dd; \r\n        const gamesOnDateUrl = `${url}/games/date/${date}`; \r\n        console.log(await axios.get(gamesOnDateUrl, { headers: headers }));\r\n        const { data: { api: { games } } } = await axios.get(gamesOnDateUrl, { headers: headers }); \r\n        return games;\r\n    } catch(error) {\r\n        return error; \r\n    }\r\n}","import React, { Component } from 'react';\r\nimport DatePicker from 'react-date-picker';\r\n\r\nclass PickDate extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    date: '',\r\n  }\r\n\r\n  onChange = date => {\r\n    this.props.date = date; \r\n      // this.setState({ date });\r\n      // console.log(date); \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style = {{ 'text-align': 'center' }}>\r\n        <DatePicker\r\n          onChange = { this.onChange }\r\n          value = { this.props.date }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PickDate;","import React from 'react';\r\nimport { Card, CardContent, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Games.module.css';\r\n\r\nconst Games = ({ gamesByDate }) => {\r\n\r\n    // Can't render data if it is undefined \r\n    if(!gamesByDate) {\r\n        return 'Loading';\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { gamesByDate.length === 0 ? <div style = {{ textAlign: 'center' }}><button className = { styles.noGames }>No Games Today</button></div> : null }\r\n            <Grid container justify = \"center\">\r\n                {gamesByDate.map(game => \r\n                    <Grid item xs={10} sm={3} md={3} component = { Card } className = { styles.card }>\r\n                        <CardContent>\r\n                            <p className = { styles.arena }>{ game.arena }</p>\r\n                            <p className = { styles.city }>{ game.city }</p>\r\n                            <p className = { styles.score }><img className = {styles.logo} src = {game.vTeam.logo}/> &nbsp; { game.vTeam.shortName } - <CountUp start = { 0 } end = { game.vTeam.score.points } duration = { 3.00 } separator = \",\" /></p>\r\n                            <p className = { styles.score }><img className = {styles.logo} src = {game.hTeam.logo}/> &nbsp; { game.hTeam.shortName } - <CountUp start = { 0 } end = { game.hTeam.score.points } duration = { 3.00 } separator = \",\" /></p>\r\n                        </CardContent>\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Games; ","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nvar tableHeaderStyle = {\r\n    fontWeight: 700,\r\n    backgroundColor: '#6b92ff',\r\n    color: '#ffffff',\r\n    fontSize: '16px',\r\n};\r\n\r\nvar rowStyle = {\r\n    color: 'grey',\r\n};\r\n\r\nconst Standings = ({ conferenceStandings, teams }) => {\r\n\r\n    // Can't render data if it is undefined \r\n    if(!conferenceStandings || !teams) {\r\n        return 'Loading';\r\n    }\r\n\r\n    function calculatePercentage(win, loss) {\r\n        return (win * 100 / (win + loss)).toFixed(3); \r\n    }\r\n\r\n    function getTeamNameById(id) {\r\n        for(let i = 0; i < teams.length; i++) {\r\n          if(id === teams[i].teamId) {\r\n            return teams[i].fullName;\r\n          }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    function getTeamLogoById(id) {\r\n      for(let i = 0; i < teams.length; i++) {\r\n        if(id === teams[i].teamId) {\r\n          return teams[i].logo;\r\n        }\r\n      }\r\n      return '';\r\n    }\r\n\r\n    return (\r\n    <TableContainer component={Paper}>\r\n      <Table align = \"center\" style={{ 'text-align': 'center', width: '900px' }} size = \"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell style = { tableHeaderStyle } align=\"left\">Team</TableCell>\r\n            <TableCell style = { tableHeaderStyle } align=\"left\">W</TableCell>\r\n            <TableCell style = { tableHeaderStyle } align=\"left\">L</TableCell>\r\n            <TableCell style = { tableHeaderStyle } align=\"left\">PCT</TableCell>\r\n            <TableCell style = { tableHeaderStyle } align=\"left\">GB</TableCell>\r\n            <TableCell style = { tableHeaderStyle } align=\"left\">Conf</TableCell>\r\n            <TableCell style = { tableHeaderStyle } align=\"left\">Home</TableCell>\r\n            <TableCell style = { tableHeaderStyle } align=\"left\">Away</TableCell>\r\n            <TableCell style = { tableHeaderStyle } align=\"left\">L10</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {conferenceStandings.map(standings => \r\n            <TableRow hover> \r\n                <TableCell align=\"left\" style = { rowStyle }><img style = {{ height: '40px', width: '40px' }}src = { getTeamLogoById(standings.teamId) } /> &nbsp; { getTeamNameById(standings.teamId) }</TableCell>\r\n                <TableCell align=\"left\" style = { rowStyle }>{ standings.win }</TableCell>\r\n                <TableCell align=\"left\" style = { rowStyle }>{ standings.loss }</TableCell>\r\n                <TableCell align=\"left\" style = { rowStyle }>{ calculatePercentage(standings.win, standings.loss) }</TableCell>\r\n                <TableCell align=\"left\" style = { rowStyle }>{ standings.gamesBehind }</TableCell>\r\n                <TableCell align=\"left\" style = { rowStyle }>{ standings.conference.win } - { standings.conference.loss }</TableCell>\r\n                <TableCell align=\"left\" style = { rowStyle }>{ standings.home.win } - { standings.home.loss }</TableCell>\r\n                <TableCell align=\"left\" style = { rowStyle }>{ standings.away.win } - { standings.away.loss }</TableCell>\r\n                <TableCell align=\"left\" style = { rowStyle }>{ standings.lastTenWin } - { standings.lastTenLoss }</TableCell>\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    )\r\n}\r\n\r\nexport default Standings; ","import React, { Component } from 'react'; \nimport './App.css';\nimport { fetchEasternConferenceStandings, fetchEasternConferenceTeams, fetchWesternConferenceTeams, fetchGamesByDate, fetchWesternConferenceStandings } from './api';\nimport { PickDate, Games, Standings } from './components';\n\nclass App extends Component {\n\n  state = {\n    selectedConference: 'east',\n    yyyy: '',\n    mm: '',\n    dd: '',\n    date: '',\n    easternConferenceStandings: [],\n    easternConferenceTeams: [],\n    westernConferenceStandings: [],\n    westernConferenceTeams: [],\n    gamesByDate: []\n  };\n\n  async componentDidMount() {\n    // var d = this.state.date; \n    // if (!!d.valueOf()) { \n    //   var yyyy = d.getFullYear();\n    //   var mm = d.getMonth();\n    //   var dd = d.getDate();\n    // }\n    // else {\n    //   var today = new Date(); \n    //   this.setState( {date: today });\n    //   var dd = today.getDate();\n    //   var mm = today.getMonth() + 1;\n    //   var yyyy = today.getFullYear();\n    // }\n    // if(dd < 10) dd = '0' + dd;\n    // if(mm < 10) mm = '0' + mm;\n    this.setState({ easternConferenceStandings: await fetchEasternConferenceStandings() }); \n    this.setState({ easternConferenceTeams: await fetchEasternConferenceTeams() });\n    this.setState({ westernConferenceStandings: await fetchWesternConferenceStandings() });\n    this.setState({ westernConferenceTeams: await fetchWesternConferenceTeams() }); \n    this.setState({ gamesByDate: await fetchGamesByDate('2019', '02', '05') });\n  }\n    // let yyyy = '2019';\n    // let mm = '01';\n    // let dd = '02';\n\n  changeConference(selectedConference) {\n    this.setState({ selectedConference })\n  }\n\n  render() {\n    const { date } = this.state; \n    const { selectedConference } = this.state; \n    const { gamesByDate } = this.state; \n    const { easternConferenceStandings } = this.state; \n    const { easternConferenceTeams } = this.state; \n    const { westernConferenceStandings } = this.state;  \n    const { westernConferenceTeams } = this.state; \n\n    return (\n      <div>\n        {/* <PickDate date = { date } /> */}\n        <div class = \"background\">\n          <Games gamesByDate = { gamesByDate } />\n        </div>\n        <div style = {{ textAlign: 'center' }}>\n          { selectedConference === 'east' ?\n            <p onClick = { () => this.changeConference('east') } style = {{ cursor: 'pointer', fontWeight: 'bold', color: 'grey', marginLeft: '7%', float: 'left' }}>Eastern Conference</p> :\n            <p onClick = { () => this.changeConference('east') } style = {{ cursor: 'pointer', color: 'grey', marginLeft: '7%', float: 'left' }}>Eastern Conference</p>\n          }\n          { selectedConference === 'west' ?\n            <p onClick = { () => this.changeConference('west') } style = {{ cursor: 'pointer', fontWeight: 'bold', color: 'grey', marginRight: '7%', float: 'right' }}>Western Conference</p> :\n            <p onClick = { () => this.changeConference('west') } style = {{ cursor: 'pointer', color: 'grey', marginRight: '7%', float: 'right' }}>Western Conference</p>\n          }\n        </div>\n        { selectedConference === 'east' ? \n          <Standings conferenceStandings = { easternConferenceStandings } teams = { easternConferenceTeams } /> :\n          <Standings conferenceStandings = { westernConferenceStandings } teams = { westernConferenceTeams } /> }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}